#!/usr/bin/env ruby

require 'fileutils'

BASE = File.dirname(__FILE__)
require File.expand_path("util.rb", BASE)

def each_sample
  FILES.each_with_index do |vals, i|
    hash, others = vals
    file, location = others
    $stderr.write "\r"
    $stderr.write "Processing #{i+1} of #{FILENUM}"
    yield hash,file,location
  end
  $stderr.write "\n"
end

$stderr.puts "== Fetching raw file samples"
each_sample do |hash, file, location|
  download_file(hash, file, location)
end

$stderr.puts "== Compiling rawloader"
system "cargo build --release --examples"
rawinfo = File.expand_path('../target/release/examples/rawinfo', BASE)

$stderr.puts "== Preparing dirs"

good = File.expand_path("good", BASE)
bad = File.expand_path("bad", BASE)
good_output = File.expand_path("good_output", BASE)
bad_output = File.expand_path("bad_output", BASE)
[good, bad, good_output, bad_output].each do |dir|
  FileUtils.rm_rf dir
  FileUtils.mkdir_p dir
end

$stderr.puts "== Testing samples"
ngood = 0
nbad = 0
each_sample do |hash, file, location|
  run = IO.popen("#{rawinfo} \"#{file}\" 2>&1")
  results = run.read
  run.close
  if $? == 0
    FileUtils.ln_s file, good
    File.write(File.expand_path(hash, good_output), results)
    ngood += 1
  else
    FileUtils.ln_s file, bad
    File.write(File.expand_path(hash, bad_output), results)
    nbad += 1
  end
  $stderr.write " -- good #{ngood} bad #{nbad}"
end
